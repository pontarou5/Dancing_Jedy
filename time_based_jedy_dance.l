#!/usr/bin/env roseus

(load "package://jedy_bringup/euslisp/jedy-interface.l")
(jedy-init)

;;(send *ri* :send-stretch :names '("rarm_joint0" "rarm_joint1" "larm_joint0" "larm_joint1") :value 64)
(send *ri* :send-stretch
      :names '("rarm_joint0" "rarm_joint1" "rarm_joint2" "rarm_joint3"
               "rarm_joint4" "rarm_joint5" "rarm_joint6" "rarm_gripper_joint"
               "larm_joint0" "larm_joint1" "larm_joint2" "larm_joint3"
               "larm_joint4" "larm_joint5" "larm_joint6" "larm_gripper_joint"
               "head_joint0" "head_joint1" "front_right_wheel_joint"
               "front_left_wheel_joint" "rear_right_wheel_joint"
               "rear_left_wheel_joint")
      :value '(64 64 64 64 127 127 127 127 127 127 127 127 127 127 127 127))

(send (send *ri* :read-stretch) :slots)

(send *ri* :servo-on)

;; ビートタイミングとポーズを定義するリスト
(setq beat-times '(1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 14.617 15.360 16.091 16.823 17.578 18.321 19.075 19.807 20.550 21.281 22.013 22.756 23.510 24.242 24.973 25.728 26.471 27.214 27.945 28.688 29.431 30.174 30.929 31.660 32.403 33.135 33.878 34.621 35.352 36.107 36.838 37.593 38.325 39.068 39.962 40.542 41.285 42.017 42.771 43.503 44.246 44.989 45.732 46.463 47.206 47.949 48.692 49.447 50.178 50.921 51.664 52.407 53.139 53.870 54.625 55.356 56.099 56.842 57.574 58.329 59.060)
)

;; ビート時刻とポーズのペアを格納する辞書型リスト
(setq beat-pose-dictionary 
'(
(1.0 -67.7025 -2.90249 0.13501 -24.3337 0.0 0.0 0.0 0.0 95.2087 5.12999 -0.13501 -42.8625 0.0 0.0 0.0 0.0 -79.3463 53.1563)
(2.0 -92.9812 -78.7387 2.39626 86.4338 0.0 0.0 0.0 0.0 -52.6163 40.9387 75.8025 29.8013 0.0 0.0 0.0 0.0 24.9075 0.0)
(3.0 -126.596 -5.46749 -0.13499 -42.8625 0.0 0.0 0.0 0.0 95.2087 5.12999 -0.13501 -42.8625 0.0 0.0 0.0 0.0 0.0 0.0)
(4.0 -79.5487 5.09626 -1.48499 -115.087 0.0 0.0 0.0 0.0 30.2062 2.90249 -0.13501 -24.6712 0.0 0.0 0.0 0.0 -24.9075 0.0)
(5.0 -67.7025 -2.90249 0.13501 -24.3337 0.0 0.0 0.0 0.0 95.2087 5.12999 -0.13501 -42.8625 0.0 0.0 0.0 0.0 -79.3463 53.1563)
(6.0 -92.9812 -78.7387 2.39626 86.4338 0.0 0.0 0.0 0.0 -52.6163 40.9387 75.8025 29.8013 0.0 0.0 0.0 0.0 24.9075 0.0)
(7.0 -126.596 -5.46749 -0.13499 -42.8625 0.0 0.0 0.0 0.0 95.2087 5.12999 -0.13501 -42.8625 0.0 0.0 0.0 0.0 0.0 0.0)
(8.0 -79.5487 5.09626 -1.48499 -115.087 0.0 0.0 0.0 0.0 30.2062 2.90249 -0.13501 -24.6712 0.0 0.0 0.0 0.0 -24.9075 0.0)
(9.0 -79.5487 5.09626 -1.48499 -115.087 0.0 0.0 0.0 0.0 92.6437 56.0925 75.8025 48.2625 0.0 0.0 0.0 0.0 -44.685 -32.0625)
(10.0 -92.9812 -79.0425 2.09251 -4.11749 0.0 0.0 0.0 0.0 95.2087 5.12999 -0.13501 -42.8625 0.0 0.0 0.0 0.0 0.0 0.0)
(11.0 -67.7025 -2.90249 0.13501 -24.3337 0.0 0.0 0.0 0.0 80.19 93.9262 1.48499 -115.087 0.0 0.0 0.0 0.0 -79.3463 0.0)
(12.0 -53.73 5.09626 -76.4437 21.2288 0.0 0.0 0.0 0.0 50.4562 -10.2263 76.1062 19.9125 0.0 0.0 0.0 0.0 -79.3463 0.0)
(13.0 -79.5487 5.09626 -1.48499 -115.087 0.0 0.0 0.0 0.0 92.6437 56.0925 75.8025 48.2625 0.0 0.0 0.0 0.0 -44.685 -32.0625)
(14.0 -92.9812 -79.0425 2.09251 -4.11749 0.0 0.0 0.0 0.0 95.2087 5.12999 -0.13501 -42.8625 0.0 0.0 0.0 0.0 0.0 0.0)
(15.0 -67.7025 -2.90249 0.13501 -24.3337 0.0 0.0 0.0 0.0 80.19 93.9262 1.48499 -115.087 0.0 0.0 0.0 0.0 -79.3463 0.0)
(16.0 -53.73 5.09626 -76.4437 21.2288 0.0 0.0 0.0 0.0 50.4562 -10.2263 76.1062 19.9125 0.0 0.0 0.0 0.0 -79.3463 0.0)
(17.0 -92.9812 -75.87 2.39626 -50.8275 0.0 0.0 0.0 0.0 50.4562 -10.2263 76.1062 19.9125 0.0 0.0 0.0 0.0 79.3463 32.0625)
(18.0 -79.5487 5.09626 -1.48499 -115.087 0.0 0.0 0.0 0.0 86.9062 15.795 -49.68 -94.1625 0.0 0.0 0.0 0.0 24.9075 0.0)
(19.0 -92.9812 -79.0425 2.09251 -4.11749 0.0 0.0 0.0 0.0 80.19 93.9262 1.48499 -115.087 0.0 0.0 0.0 0.0 44.685 0.0)
(20.0 -79.5487 5.09626 -1.48499 -115.087 0.0 0.0 0.0 0.0 23.0175 76.5112 70.74 123.356 0.0 0.0 0.0 0.0 -24.9075 0.0)
(21.0 -92.9812 -75.87 2.39626 -50.8275 0.0 0.0 0.0 0.0 50.4562 -10.2263 76.1062 19.9125 0.0 0.0 0.0 0.0 79.3463 32.0625)
(22.0 -79.5487 5.09626 -1.48499 -115.087 0.0 0.0 0.0 0.0 86.9062 15.795 -49.68 -94.1625 0.0 0.0 0.0 0.0 24.9075 0.0)
(23.0 -92.9812 -79.0425 2.09251 -4.11749 0.0 0.0 0.0 0.0 80.19 93.9262 1.48499 -115.087 0.0 0.0 0.0 0.0 44.685 0.0)
(24.0 -79.5487 5.09626 -1.48499 -115.087 0.0 0.0 0.0 0.0 23.0175 76.5112 70.74 123.356 0.0 0.0 0.0 0.0 -24.9075 0.0)
(25.0 -30.2062 -2.90249 0.13501 -24.6712 0.0 0.0 0.0 0.0 67.7025 2.90249 -0.13501 -24.3337 0.0 0.0 0.0 0.0 -24.9075 32.0625)
(26.0 -92.6437 -56.0925 -75.8025 48.2625 0.0 0.0 0.0 0.0 92.9812 75.87 -2.39626 -50.8275 0.0 0.0 0.0 0.0 24.9075 0.0)
(27.0 -86.9062 -15.795 49.68 -94.1625 0.0 0.0 0.0 0.0 92.9812 75.87 -2.39626 -50.8275 0.0 0.0 0.0 0.0 24.9075 0.0)
(28.0 -95.2087 -5.12999 0.13501 -42.8625 0.0 0.0 0.0 0.0 92.9812 75.87 -2.39626 -50.8275 0.0 0.0 0.0 0.0 -79.3463 0.0)
(29.0 -30.2062 -2.90249 0.13501 -24.6712 0.0 0.0 0.0 0.0 67.7025 2.90249 -0.13501 -24.3337 0.0 0.0 0.0 0.0 -24.9075 32.0625)
(30.0 -92.6437 -56.0925 -75.8025 48.2625 0.0 0.0 0.0 0.0 92.9812 75.87 -2.39626 -50.8275 0.0 0.0 0.0 0.0 24.9075 0.0)
(31.0 -86.9062 -15.795 49.68 -94.1625 0.0 0.0 0.0 0.0 92.9812 75.87 -2.39626 -50.8275 0.0 0.0 0.0 0.0 24.9075 0.0)
(32.0 -95.2087 -5.12999 0.13501 -42.8625 0.0 0.0 0.0 0.0 92.9812 75.87 -2.39626 -50.8275 0.0 0.0 0.0 0.0 -79.3463 0.0)
(33.0 -30.2062 -2.90249 0.13501 -24.6712 0.0 0.0 0.0 0.0 37.395 16.0987 -54.2025 -93.8587 0.0 0.0 0.0 0.0 24.9075 32.0625)
(34.0 -80.19 -93.9262 -1.48499 -115.087 0.0 0.0 0.0 0.0 -52.6163 40.9387 75.8025 29.8013 0.0 0.0 0.0 0.0 -79.3463 0.0)
(35.0 -92.9812 -75.87 2.39626 -50.8275 0.0 0.0 0.0 0.0 -52.6163 40.9387 75.8025 29.8013 0.0 0.0 0.0 0.0 0.0 0.0)
(36.0 -95.2087 -5.12999 0.13501 -42.8625 0.0 0.0 0.0 0.0 23.0175 76.5112 70.74 123.356 0.0 0.0 0.0 0.0 -79.3463 0.0)
(37.0 -30.2062 -2.90249 0.13501 -24.6712 0.0 0.0 0.0 0.0 37.395 16.0987 -54.2025 -93.8587 0.0 0.0 0.0 0.0 24.9075 32.0625)
(38.0 -80.19 -93.9262 -1.48499 -115.087 0.0 0.0 0.0 0.0 -52.6163 40.9387 75.8025 29.8013 0.0 0.0 0.0 0.0 -79.3463 0.0)
(39.0 -92.9812 -75.87 2.39626 -50.8275 0.0 0.0 0.0 0.0 -52.6163 40.9387 75.8025 29.8013 0.0 0.0 0.0 0.0 0.0 0.0)
(40.0 -95.2087 -5.12999 0.13501 -42.8625 0.0 0.0 0.0 0.0 23.0175 76.5112 70.74 123.356 0.0 0.0 0.0 0.0 -79.3463 0.0)
(41.0 -37.395 -16.0987 54.2025 -93.8587 0.0 0.0 0.0 0.0 95.2087 5.12999 -0.13501 -42.8625 0.0 0.0 0.0 0.0 -24.9075 32.0625)
(42.0 -80.19 -93.9262 -1.48499 -115.087 0.0 0.0 0.0 0.0 126.596 5.46749 0.13499 -42.8625 0.0 0.0 0.0 0.0 -79.3463 0.0)
(43.0 -30.2062 -2.90249 0.13501 -24.6712 0.0 0.0 0.0 0.0 -52.6163 40.9387 75.8025 29.8013 0.0 0.0 0.0 0.0 -24.9075 0.0)
(44.0 -80.19 -93.9262 -1.48499 -115.087 0.0 0.0 0.0 0.0 92.9812 79.0425 -2.09251 -4.11749 0.0 0.0 0.0 0.0 79.3463 0.0)
(45.0 -37.395 -16.0987 54.2025 -93.8587 0.0 0.0 0.0 0.0 95.2087 5.12999 -0.13501 -42.8625 0.0 0.0 0.0 0.0 -24.9075 32.0625)
(46.0 -80.19 -93.9262 -1.48499 -115.087 0.0 0.0 0.0 0.0 126.596 5.46749 0.13499 -42.8625 0.0 0.0 0.0 0.0 -79.3463 0.0)
(47.0 -30.2062 -2.90249 0.13501 -24.6712 0.0 0.0 0.0 0.0 -52.6163 40.9387 75.8025 29.8013 0.0 0.0 0.0 0.0 -24.9075 0.0)
(48.0 -80.19 -93.9262 -1.48499 -115.087 0.0 0.0 0.0 0.0 92.9812 79.0425 -2.09251 -4.11749 0.0 0.0 0.0 0.0 79.3463 0.0)
(49.0 -53.73 5.09626 -76.4437 21.2288 0.0 0.0 0.0 0.0 95.2087 5.12999 -0.13501 -42.8625 0.0 0.0 0.0 0.0 -79.3463 -53.1563)
(50.0 -30.2062 -2.90249 0.13501 -24.6712 0.0 0.0 0.0 0.0 80.19 93.9262 1.48499 -115.087 0.0 0.0 0.0 0.0 -44.685 0.0)
(51.0 -126.596 -5.46749 -0.13499 -42.8625 0.0 0.0 0.0 0.0 23.0175 76.5112 70.74 123.356 0.0 0.0 0.0 0.0 79.3463 0.0)
(52.0 -67.7025 -2.90249 0.13501 -24.3337 0.0 0.0 0.0 0.0 67.7025 2.90249 -0.13501 -24.3337 0.0 0.0 0.0 0.0 -79.3463 0.0)
(53.0 -53.73 5.09626 -76.4437 21.2288 0.0 0.0 0.0 0.0 95.2087 5.12999 -0.13501 -42.8625 0.0 0.0 0.0 0.0 -79.3463 -53.1563)
(54.0 -30.2062 -2.90249 0.13501 -24.6712 0.0 0.0 0.0 0.0 80.19 93.9262 1.48499 -115.087 0.0 0.0 0.0 0.0 -44.685 0.0)
(55.0 -126.596 -5.46749 -0.13499 -42.8625 0.0 0.0 0.0 0.0 23.0175 76.5112 70.74 123.356 0.0 0.0 0.0 0.0 79.3463 0.0)
(56.0 -67.7025 -2.90249 0.13501 -24.3337 0.0 0.0 0.0 0.0 67.7025 2.90249 -0.13501 -24.3337 0.0 0.0 0.0 0.0 -79.3463 0.0)
(57.0 52.6163 -40.9387 -75.8025 29.8013 0.0 0.0 0.0 0.0 79.5487 -5.09626 1.48499 -115.087 0.0 0.0 0.0 0.0 -24.9075 -53.1563)
(58.0 -126.596 -5.46749 -0.13499 -42.8625 0.0 0.0 0.0 0.0 95.2087 5.12999 -0.13501 -42.8625 0.0 0.0 0.0 0.0 -24.9075 0.0)
(59.0 -53.73 5.09626 -76.4437 21.2288 0.0 0.0 0.0 0.0 80.19 93.9262 1.48499 -115.087 0.0 0.0 0.0 0.0 0.0 0.0)
(60.0 -92.9812 -75.87 2.39626 -50.8275 0.0 0.0 0.0 0.0 92.9812 75.87 -2.39626 -50.8275 0.0 0.0 0.0 0.0 79.3463 0.0)
))


(setq beat-pose-dictionary (sort beat-pose-dictionary `(lambda (a b) (> (car a) (car b)))))
(ros::ros-info "~A" beat-pose-dictionary)

;; 現在処理したビートのインデックスを保持
(setq current-index 0)

(defun get-time-difference (elapsed-sec beat-list current-index)
  (let* ((current-beat (nth current-index beat-list))   ;; 現在のビート
         (current-time (car current-beat))               ;; 現在のビートの時刻
         (tolerance 0.05))                               ;; 許容誤差（例: 50ms）
    (if (or (<= (abs (- elapsed-sec current-time)) tolerance)  ;; 最初のビートは「近い」時刻差もOK
            (= current-index 0))                         ;; 最初のビートを強制的に処理
        (let ((next-index (1+ current-index)))           ;; 次のインデックス
          (if (< next-index (length beat-list))          ;; 次のインデックスが有効か確認
              (let* ((next-beat (nth next-index beat-list)) ;; 次のビート
                     (next-time (car next-beat))           ;; 次のビート時刻
                     (next-pose (cdr next-beat)))          ;; 次のビートのポーズ
                ;; 時間差を計算して結果を返す
                (list (- next-time elapsed-sec) next-time next-pose next-index))
              nil))                                       ;; 次のビートがない場合は nil を返す
        nil)))    

;; 初期時刻を取得
(setq start-time (ros::time-now))

;; 実行部分、進行状況をインデックスで管理
(ros::rate 20)
(do-until-key
  (let* ((current-time 0)
         (elapsed-sec 0))
    (setf current-time (ros::time-now))
    (setf elapsed-sec (- (send current-time :to-sec)
                         (send start-time :to-sec)))

    ;; 次のビートの情報を取得
    (setq time-difference-with-pose (get-time-difference elapsed-sec (reverse beat-pose-dictionary) current-index))
    (if time-difference-with-pose
        (let ((time-diff (nth 0 time-difference-with-pose))
              (next-beat (nth 1 time-difference-with-pose))
             (pose (remove-if #'null (nth 2 time-difference-with-pose)));; なぜか含まれるnilを取り除く

              (new-index (nth 3 time-difference-with-pose)))  ;; 新しいインデックス

          (ros::ros-info "Elapsed Time: ~A seconds" elapsed-sec)
          (ros::ros-info "after-calc-time-diff: ~A seconds" (- (send (ros::time-now) :to-sec) (send start-time :to-sec)))
          (ros::ros-info "if is OK!!")
          ;; 次のビートの情報とポーズを送信
          (ros::ros-info "Next Beat at ~A seconds: Pose ~A" next-beat pose)
          (send *jedy* :angle-vector pose)

          ;; 次のビートを送信した後にインデックスを更新
          (setq current-index new-index)
          (ros::ros-info "Sending angle vector with time diff: ~A" time-diff)

          ;; 時刻差に応じて補間(* 1000 time-diff)、wait-interpolation
          (ros::ros-info "before-move: ~A seconds" (- (send (ros::time-now) :to-sec) (send start-time :to-sec)))
          (send *ri* :angle-vector (send *jedy* :angle-vector) (* 900 time-diff) :default-controller 0 :min-time 0.1)
          (ros::ros-info "after-move: ~A seconds" (- (send (ros::time-now) :to-sec) (send start-time :to-sec)))
          (send *ri* :wait-interpolation)
          (ros::ros-info "after-wait: ~A seconds" (- (send (ros::time-now) :to-sec) (send start-time :to-sec)))
 
  ;; 終了待機状態
  (ros::ros-info "Waiting for key press..."))
  (progn
    (ros::ros-info "if is not OK!!")
    (ros::ros-info "time-now :~A seconds" (- (send (ros::time-now) :to-sec) (send start-time :to-sec)))
  )
  )))
